fragment ProfileProps on Profile {
  id
  name
  firstName
  lastName
  email
  e164
  phone
  role
  org
  website
  location
  description
  twitterHandle
  facebookUrl
  facebookName
  facebookImage
  socials
}

#  dupes ProfileProps
fragment ProfileExtendedProps on ProfileExtended {
  id
  name
  firstName
  lastName
  email
  e164
  phone
  role
  org
  website
  location
  socials
  description
  # oauth provided
  twitterHandle
  facebookUrl
  facebookName
  facebookImage
  # calculated, sans contacts|events
  socialDistance
  isMuted
}

fragment OnboardingProfileProps on OnboardingProfile {
  id
  name
  firstName
  lastName
  email
}

# NOTE: keep sync'd  w/ Propfiel
fragment ContactProps on Contact {
  id
  name
  firstName
  lastName
  email
  e164
  phone
  role
  org
  website
  location
  description
  twitterHandle
  facebookUrl
  facebookName
  facebookImage
  socials
  # additions
  conversationCountWithSubject
}

query GetProfile($input: GetProfileInput!) {
  getProfile(input: $input) {
    ...on ProfileExtended {
      ...ProfileExtendedProps

      events {
        ...on ConversationPublished {
          kind
          occurredAt
          persona
          conversation {
            ...ConversationProps
          }
        }
        ...on ContactProfileChanged {
          kind
          occurredAt
          contact {
            ...ProfileProps
          }
        }
      }

      contacts {
        ...ContactProps
      }
    }
    ... on UserError {
      ...UserErrorProps
    }
  }
}

mutation UpdateProfile($input: UpdateProfileInput!) {
  updateProfile(input: $input) {
    ...on ProfileExtended {
      ...ProfileExtendedProps
    }
    ... on UserError {
      ...UserErrorProps
    }
  }
}

mutation PatchProfile($input: PatchProfileInput!) {
  patchProfile(input: $input) {
    ...on UserError {
      message
    }
    ...on OnboardingProfile {
      ...OnboardingProfileProps
    }
  }
}


mutation MuteProfile($input: MuteProfileInput) {
  muteProfile(input: $input) {
    ...on ProfileExtended {
      ...ProfileExtendedProps
    }
    ... on UserError {
      ...UserErrorProps
    }
  }
}


query GetContacts {
  getContacts {
    contacts {
      ...ContactProps
    }
  }
}
